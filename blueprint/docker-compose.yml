version: "3.8"
services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    environment:
      - REACT_APP_BASE_URL=http://localhost:3000
      - REACT_APP_AUTH0_DOMAIN=dev-jcol6i3ol3vahmwd.us.auth0.com
      - REACT_APP_AUTH0_CLIENT_ID=gLHYBRGSqHfBTelkBBqiFS7O1yuxLGPg
      - REACT_APP_AUTH0_AUDIENCE=http://localhost:3001

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - 3001:3001
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgres://blueprint:blueprint@postgres:5432/blueprint
      - AUTH0_AUDIENCE=http://localhost:3001
      - AUTH0_ISSUER_BASE_URL=https://dev-jcol6i3ol3vahmwd.us.auth0.com/
      - AUTH0_TOKEN_SIGNING_ALG=RS256
      - SENDGRID_API_KEY=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
  yjswebsocket:
    container_name: yjsWebsocket
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - 3002:3002
  postgres:
    container_name: postgres
    restart: always
    image: postgres:12
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=blueprint
      - POSTGRES_USER=blueprint
      - POSTGRES_DB=blueprint
    volumes:
      - postgres-volume:/var/lib/postgresql/data
      - ./postgres12/:/docker-entrypoint-initdb.d/
volumes:
  postgres-volume:
